<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sunwoda.demo.dao.UserDao">

    <resultMap type="com.sunwoda.demo.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="createAt" column="create_at" jdbcType="TIMESTAMP"/>
        <result property="createBy" column="create_by" jdbcType="INTEGER"/>
        <result property="updateAt" column="update_at" jdbcType="TIMESTAMP"/>
        <result property="updateBy" column="update_by" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
        <result property="tenantId" column="tenant_id" jdbcType="INTEGER"/>
        <result property="perms" column="perms" jdbcType="VARCHAR"/>
        <result property="role" column="role" jdbcType="VARCHAR"/>
        <result property="salt" column="salt" jdbcType="VARCHAR"/>
        <result property="address" column="address" jdbcType="VARCHAR"/>
    </resultMap>

<!--  开启缓存  -->
    <cache type="com.sunwoda.demo.redis.RedisCache"/>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select
          id, create_at, create_by, update_at, update_by, username, password, tenant_id, perms, role, salt
        from sccp2.user
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select
          id, create_at, create_by, update_at, update_by, username, password, tenant_id, perms, role, salt
        from sccp2.user
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserMap">
        select
        id, create_at, create_by, update_at, update_by, username, password, tenant_id, perms, role, salt
        from sccp2.user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="createAt != null">
                and create_at = #{createAt}
            </if>
            <if test="createBy != null">
                and create_by = #{createBy}
            </if>
            <if test="updateAt != null">
                and update_at = #{updateAt}
            </if>
            <if test="updateBy != null">
                and update_by = #{updateBy}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
            <if test="tenantId != null">
                and tenant_id = #{tenantId}
            </if>
            <if test="perms != null and perms != ''">
                and perms = #{perms}
            </if>
            <if test="role != null and role != ''">
                and role = #{role}
            </if>
            <if test="salt != null and salt != ''">
                and salt = #{salt}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into sccp2.user(create_at, create_by, update_at, update_by, username, password, tenant_id, perms, role, salt)
        values (#{createAt}, #{createBy}, #{updateAt}, #{updateBy}, #{username}, #{password}, #{tenantId}, #{perms}, #{role}, #{salt})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into sccp2.user(create_at, create_by, update_at, update_by, username, password, tenant_id, perms, role,
        salt)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.createAt}, #{entity.createBy}, #{entity.updateAt}, #{entity.updateBy}, #{entity.username},
            #{entity.password}, #{entity.tenantId}, #{entity.perms}, #{entity.role}, #{entity.salt})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into sccp2.user(create_at, create_by, update_at, update_by, username, password, tenant_id, perms, role,
        salt)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.createAt}, #{entity.createBy}, #{entity.updateAt}, #{entity.updateBy}, #{entity.username},
            #{entity.password}, #{entity.tenantId}, #{entity.perms}, #{entity.role}, #{entity.salt})
        </foreach>
        on duplicate key update
        create_at = values(create_at) , create_by = values(create_by) , update_at = values(update_at) , update_by =
        values(update_by) , username = values(username) , password = values(password) , tenant_id = values(tenant_id) ,
        perms = values(perms) , role = values(role) , salt = values(salt)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update sccp2.user
        <set>
            <if test="createAt != null">
                create_at = #{createAt},
            </if>
            <if test="createBy != null">
                create_by = #{createBy},
            </if>
            <if test="updateAt != null">
                update_at = #{updateAt},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy},
            </if>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
            <if test="tenantId != null">
                tenant_id = #{tenantId},
            </if>
            <if test="perms != null and perms != ''">
                perms = #{perms},
            </if>
            <if test="role != null and role != ''">
                role = #{role},
            </if>
            <if test="salt != null and salt != ''">
                salt = #{salt},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from sccp2.user where id = #{id}
    </delete>

    <select id="getAddressList" resultMap="UserMap">
        SELECT
            u.*,
            uai.address as address
        FROM
            `user` u
            INNER JOIN user_address_info uai ON u.id = uai.user_id
        <where>
            <if test="id != null">
                and u.id = #{id}
            </if>
            <if test="createAt != null">
                and u.create_at = #{createAt}
            </if>
            <if test="createBy != null">
                and u.create_by = #{createBy}
            </if>
            <if test="updateAt != null">
                and u.update_at = #{updateAt}
            </if>
            <if test="updateBy != null">
                and u.update_by = #{updateBy}
            </if>
            <if test="username != null and username != ''">
                and u.username = #{username}
            </if>
            <if test="password != null and password != ''">
                and u.password = #{password}
            </if>
            <if test="tenantId != null">
                and u.tenant_id = #{tenantId}
            </if>
            <if test="perms != null and perms != ''">
                and u.perms = #{perms}
            </if>
            <if test="role != null and role != ''">
                and u.role = #{role}
            </if>
            <if test="salt != null and salt != ''">
                and u.salt = #{salt}
            </if>
        </where>
    </select>

</mapper>

